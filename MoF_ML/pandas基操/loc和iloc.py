# ##  随机生DataFrame 类型数据
import pandas as pd
import numpy as np

frame = pd.DataFrame(np.random.rand(4, 4), index=list('abcd'), columns=list('ABCD'))
print(frame)
#           A         B         C         D
# a  0.293521  0.036542  0.301497  0.887359
# b  0.901050  0.018572  0.971252  0.681840
# c  0.327078  0.387534  0.421665  0.084774
# d  0.904549  0.746656  0.725776  0.586498


# 1、loc    基于行标签和列标签（x_label、y_label）进行索引

# ## .loc先行后列，中间用逗号（,）分割，例如取 a 和 A 对应的数据
print(frame.loc['a', 'A'])
# 0.2935213898664275

# ## 取前两行对应数据
print(frame.loc['a':'b', :])
#           A         B         C         D
# a  0.293521  0.036542  0.301497  0.887359
# b  0.901050  0.018572  0.971252  0.681840

# ## 取前两列对应数据
print(frame.loc[:,'A':'B'])
#           A         B
# a  0.293521  0.036542
# b  0.901050  0.018572
# c  0.327078  0.387534
# d  0.904549  0.746656

# ## 取前两行和前两列对应数据
print(frame.loc['a':'b','A':'B'])
#           A         B
# a  0.293521  0.036542
# b  0.901050  0.018572

# 2. iloc    基于行索引和列索引（index，columns） 都是从 0 开始
# 如果数据的行标签和列标签名字太长或不容易记，则用 iloc 很方便，只需记标签对应的索引即可

# ## .loc先行后列，中间用逗号（,）分割，例如取 a 和 A 对应的数据
print(frame.iloc[0,0])
# 0.2935213898664275

# ## 取前两行对应数据
print(frame.iloc[0:2,:])
#           A         B         C         D
# a  0.293521  0.036542  0.301497  0.887359
# b  0.901050  0.018572  0.971252  0.681840

# ## 取前两行和前两列对应数据
print(frame.iloc[0:2,0:2])
#           A         B
# a  0.293521  0.036542
# b  0.901050  0.018572

# ## 上面的例子取的都是连续的行和列，若取第一行和第四行、第一列和第四列对应的数据，则
print(frame.iloc[[0,3],[0,3]])
#           A         D
# a  0.293521  0.887359
# d  0.904549  0.586498

# 3、 ix  基于标签或者索引（loc和iloc 的混合）
# ## 取前两行和前两列对应数据
print(frame.iloc[0:2,0:2])
#           A         B
# a  0.293521  0.036542
# b  0.901050  0.018572

# 官方文档新的python版本已经弃用 ix，建议使用 loc 和 iloc
